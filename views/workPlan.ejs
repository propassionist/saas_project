<!DOCTYPE html>
<html lang="en">

<head>

  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <meta name="description" content="">
  <meta name="author" content="">

  <title>SB Admin 2 - Dashboard</title>

  <!-- Custom fonts for this template-->
  <link href="vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">
  <link
    href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i"
    rel="stylesheet">
  <link href='fullcalendar/main.css' rel='stylesheet' />

  <!-- Custom styles for this template-->
  <link href="css/sb-admin-2.min.css" rel="stylesheet">

  <style>
    .fc-right .fc-prev-button, .fc-right .fc-next-button{
      background-color: #b1d583;
      background-image: none;
    }
  </style>

  <!-- <style>

    .popper,
    .tooltip {
      position: absolute;
      z-index: 9999;
      background: #FFC107;
      color: black;
      width: 150px;
      border-radius: 3px;
      box-shadow: 0 0 2px rgba(0,0,0,0.5);
      padding: 10px;
      text-align: center;
    }
    .style5 .tooltip {
      background: #1E252B;
      color: #FFFFFF;
      max-width: 200px;
      width: auto;
      font-size: .8rem;
      padding: .5em 1em;
    }
    .popper .popper__arrow,
    .tooltip .tooltip-arrow {
      width: 0;
      height: 0;
      border-style: solid;
      position: absolute;
      margin: 5px;
    }

    .tooltip .tooltip-arrow,
    .popper .popper__arrow {
      border-color: #FFC107;
    }
    .style5 .tooltip .tooltip-arrow {
      border-color: #1E252B;
    }
    .popper[x-placement^="top"],
    .tooltip[x-placement^="top"] {
      margin-bottom: 5px;
    }
    .popper[x-placement^="top"] .popper__arrow,
    .tooltip[x-placement^="top"] .tooltip-arrow {
      border-width: 5px 5px 0 5px;
      border-left-color: transparent;
      border-right-color: transparent;
      border-bottom-color: transparent;
      bottom: -5px;
      left: calc(50% - 5px);
      margin-top: 0;
      margin-bottom: 0;
    }
    .popper[x-placement^="bottom"],
    .tooltip[x-placement^="bottom"] {
      margin-top: 5px;
    }
    .tooltip[x-placement^="bottom"] .tooltip-arrow,
    .popper[x-placement^="bottom"] .popper__arrow {
      border-width: 0 5px 5px 5px;
      border-left-color: transparent;
      border-right-color: transparent;
      border-top-color: transparent;
      top: -5px;
      left: calc(50% - 5px);
      margin-top: 0;
      margin-bottom: 0;
    }
    .tooltip[x-placement^="right"],
    .popper[x-placement^="right"] {
      margin-left: 5px;
    }
    .popper[x-placement^="right"] .popper__arrow,
    .tooltip[x-placement^="right"] .tooltip-arrow {
      border-width: 5px 5px 5px 0;
      border-left-color: transparent;
      border-top-color: transparent;
      border-bottom-color: transparent;
      left: -5px;
      top: calc(50% - 5px);
      margin-left: 0;
      margin-right: 0;
    }
    .popper[x-placement^="left"],
    .tooltip[x-placement^="left"] {
      margin-right: 5px;
    }
    .popper[x-placement^="left"] .popper__arrow,
    .tooltip[x-placement^="left"] .tooltip-arrow {
      border-width: 5px 0 5px 5px;
      border-top-color: transparent;
      border-right-color: transparent;
      border-bottom-color: transparent;
      right: -5px;
      top: calc(50% - 5px);
      margin-left: 0;
      margin-right: 0;
    }
  </style> -->

</head>

<body id="page-top">

  <!-- Page Wrapper -->
  <div id="wrapper">

    <!-- Sidebar -->

    <% include ./sidebar %>

      <!-- Content Wrapper -->
      <div id="content-wrapper" class="d-flex flex-column">

        <!-- Main Content -->
        <div id="content">

          <% include ./topbar %>

            <!-- Begin Page Content -->
            <div class="container-fluid">

              <!-- Page Heading -->
              <div class="d-sm-flex align-items-center justify-content-between mb-4">
                <h1 class="h3 mb-0 text-gray-800">근무스케줄관리</h1>
                <!-- <a href="#" class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm"><i -->
                <a href="#" class="d-none btn btn-sm btn-primary shadow-sm"><i
                    class="fas fa-download fa-sm text-white-50"></i> Generate Schedule</a>
              </div>

              <!-- Content Row -->
              <div class="row">
                <!-- Pie Chart -->
                <div class="col-xl col-lg">
                  <div class="card shadow mb-4">
                    <!-- Card Header - Dropdown -->
                    <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                      <h6 class="m-0 font-weight-bold text-primary">근무스케줄표</h6>
                      <div class="d-none dropdown no-arrow">
                        <a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown"
                          aria-haspopup="true" aria-expanded="false">
                          <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
                        </a>
                        <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in"
                          aria-labelledby="dropdownMenuLink">
                          <div class="dropdown-header">Dropdown Header:</div>
                          <a class="dropdown-item" href="#">Action</a>
                          <a class="dropdown-item" href="#">Another action</a>
                          <div class="dropdown-divider"></div>
                          <a class="dropdown-item" href="#">Something else here</a>
                        </div>
                      </div>
                    </div>
                    <!-- Card Body -->
                    <div class="card-body">
                      <form action="" name="mForm">
                        <input type="hidden" name="srcWork">
                        <input type="hidden" name="srcWorkTitle">
                        <input type="hidden" name="destWork">
                        <input type="hidden" name="destWorkTitle">
                        <!-- <input type="hidden" name="destWorkId"> -->

                        <div class="form-group row">
                          <label for="worker" class="col-sm-2 control-label col-form-label">사업장 *</label>
                          <div class="col-sm-4">
                            <select class="select form-control custom-select" style="width: 100%;" id="site"
                              name="site">
                              <option>--선택--</option>
                              <%for(var i=0; i<site.length; i++){%>
                                <option value="<%=site[i].SITECD%>" <%=siteCd==site[i].SITECD ? 'selected' : '' %>>
                                  <%=site[i].SITENM%>
                                </option>
                                <%}%>
                            </select>
                          </div>
                        </div>

                        <style>
                          p {
                            margin: 0px;
                          }

                          #external-events {
                            display: flex;
                          }

                          .fc-event {
                            margin: 2px;
                            /* width: 100px; */
                            /* height: 20px; */
                            text-align: center;
                          }
                        </style>

                        <div class="row justify-content-between d-none">
                          <div class="col text-left">
                            <p>변경 요청 목록</p>
                            
                          </div>
                          <div class="col text-right">
                            <button type="button" class="btn btn-outline-success btn-sm" onclick="approvalBatch()">일괄승인</button>
                          </div>
                        </div>

                        <div class="row d-none">
                          <div class="card" style="margin:10px 10px;">
                            <div class="card-body" style="overflow-x: scroll;white-space: nowrap;">
                              <ul class="list-group list-group-horizontal">
                            <%

                            var workObj;
                            var siteObj;

                            if(data2)
                              workObj = data2.reduce((obj, item) => Object.assign(obj, { [item.WORKTYPCD]: item.WORKTYPNM }), {});
                            if(data3)
                              workerObj = data3.reduce((obj, item) => Object.assign(obj, { [item.WORKERCD]: item.NAME }), {});

                            if(data != undefined && data != null){
                                var checkSwitchedWith = "";
                                var titleSwitchedWith = new Object();

                                for(var i=0; i<data.length; i++){

                                  if(!data[i].WORKYMD) continue;

                                  var id = data[i].WORKYMD + "|" + data[i].WORKERCD + "|" + data[i].WORKTYP;
                                  var statusNm = "";
                                  var keyColor = "";
                                  var ymdWithHyphen = data[i].WORKYMD.substr(0, 4)
                                                + "-" + data[i].WORKYMD.substr(4, 2)
                                                + "-" + data[i].WORKYMD.substr(6, 2);
                                  
                                  var titleNm = ymdWithHyphen + " " + data[i].NAME + "-" + data[i].WORKTYPNM;

                                  if(data[i].APPRSTATUS != '02' && data[i].APPRSTATUS != '03') continue;
                                  if(data[i].RELATEDTO && data[i].STATUS == 'D') continue;

                                  if(data[i].SWITCHEDWITH){
                                    console.log(titleSwitchedWith);
                                    if(checkSwitchedWith.indexOf(id) == -1){
                                      titleSwitchedWith[data[i].SWITCHEDWITH] = data[i].WORKYMD + " " + data[i].NAME + "-" + data[i].WORKTYPNM;
                                      checkSwitchedWith += data[i].SWITCHEDWITH;
                                      continue;
                                    }else{
                                      console.log(id)
                                      titleNm = titleSwitchedWith[id] + "<--->" + data[i].WORKYMD + " " + data[i].NAME + "-" + data[i].WORKTYPNM;
                                      <!-- console.log(titleSwitchedWith[id]); -->
                                    }
                                  }

                                  console.log(titleNm);

                                  switch(data[i].STATUS){
                                    case "C":
                                      statusNm = "등록요청";
                                      break;
                                    case "U":
                                      statusNm = "변경요청";
                                      break;
                                    case "D":
                                      statusNm = "삭제요청";
                                      break;
                                    case "CF":
                                    case "CT":
                                      statusNm = "교체요청";
                                      break;
                                  }
                                %>
                                <li class="list-group-item">
                                  [<%=statusNm%>] <strong><%=titleNm%></strong>
                                  <button type="button" class="btn btn-outline-success btn-sm" onclick="approval(<%=JSON.stringify(data[i])%>, '05')">승인</button>
                                  <button type="button" class="btn btn-outline-danger btn-sm" onclick="approval(<%=JSON.stringify(data[i])%>, '04')">반려</button>
                                </li>
                              <%}%>
                            <%}%>
                                </ul>
                            </div>
                          </div>                            
                        </div>

                        <div id='calendar-container'>
                          <div id='calendar'></div>
                        </div>
                      </form>
                    </div>
                  </div>
                </div>
              </div>

            </div>
            <!-- /.container-fluid -->

        </div>
        <!-- End of Main Content -->

        <% include ./footer %>

      </div>
      <!-- End of Content Wrapper -->

  </div>

  <form id="batchModalForm" name="batchModalForm">
    <div class="modal" id="myBatchModal" tabindex="-1" role="dialog">
      <div class="modal-dialog" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title">근무 지정</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">&times;</span>
            </button>
          </div>
          <div class="modal-body">

            <div class="form-group row">
              <label for="carNm" class="col-sm-3 control-label col-form-label">등록기간 *</label>
              <div class="col-sm-4">
                <input type="text" class="form-control text-center" id="batch_workymd_from" name="batch_workymd_from"
                  disabled>
              </div>
              ~
              <div class="col-sm-4">
                <input type="text" class="form-control text-center" id="batch_workymd_to" name="batch_workymd_to"
                  disabled>
              </div>
            </div>
            <div class="form-group row">
              <label for="worktype" class="col-sm-3 control-label col-form-label">근무조 *</label>
              <div class="col-sm-5">
                <select class="select form-control custom-select" style="width: 100%;" id="batch_worktype" name="batch_worktype" required>
                  <option value="">--선택--</option>
                  <%for(var i=0; i<data2.length; i++){%>
                    <option value="<%=data2[i].WORKTYPCD%>"><%=data2[i].WORKTYPNM%></option>
                    <%}%>
                </select>
              </div>
            </div>
            <div class="form-group row">
              <label for="worker" class="col-sm-3 control-label col-form-label">근무자 *</label>
              <div class="col-sm-5">
                <select class="select form-control custom-select" style="width: 100%;" id="batch_worker" name="batch_worker" required <%=workerCd ? 'disabled' : ''%>>
                  <!-- <option value="">--선택--</option> -->
                  <%for(var i=0; i<data3.length; i++){%>
                    <option value="<%=data3[i].WORKERCD%>" <%workerCd && workerCd == data3[i].WORKERCD ? 'selected' : '' %>>
                      <%=data3[i].NAME%>
                    </option>
                    <%}%>
                </select>
              </div>
            </div>
          </div>
          <div class="modal-footer">
            <button type="submit" id="batchConfirm" class="btn btn-primary">확인</button>
            <!-- <button type="button" id="batchConfirm" class="btn btn-primary">확인</button> -->
            <button type="submit" id="batchDelete" class="btn btn-primary">삭제</button>
            <button type="button" class="btn btn-secondary" data-dismiss="modal">닫기</button>
          </div>
        </div>
      </div>
    </div>
  </form>
  <!-- End of Page Wrapper -->

  <!-- Scroll to Top Button-->
  <a class="scroll-to-top rounded" href="#page-top">
    <i class="fas fa-angle-up"></i>
  </a>



  <!-- Bootstrap core JavaScript-->
  <script src="vendor/jquery/jquery.min.js"></script>
  <script src="vendor/bootstrap/js/bootstrap.bundle.min.js"></script>

  <!-- Core plugin JavaScript-->
  <script src="vendor/jquery-easing/jquery.easing.min.js"></script>

  <!-- Custom scripts for all pages-->
  <script src="js/sb-admin-2.min.js"></script>

  <!-- Page level plugins -->
  <script src="vendor/chart.js/Chart.min.js"></script>

  <!-- Page level custom scripts -->
  <script src="js/demo/chart-area-demo.js"></script>
  <script src="js/demo/chart-pie-demo.js"></script>

  <script src='fullcalendar/main.js'></script>

  <!-- <script src="https://unpkg.com/popper.js/dist/umd/popper.min.js"></script>
  <script src="https://unpkg.com/tooltip.js/dist/umd/tooltip.min.js"></script> -->

  <script>

    var backColors = {
      basic: "#3788D8",
      delete : "#323233",
      change : "#F9F206",
      switch : "#A33F5B",
      noauth : "#A6A6A6"
    };

    var textColors = {
      basic : "#FFF",
      delete : "#FFF",
      change : "#000",
      switch : "#FFF",
      noauth : "#FFF"
    };

    document.addEventListener('DOMContentLoaded', function () {

      if(window.mobilecheck()){
        // $("#wrapper").toggleClass("toggle");
        $("#sidebarToggleTop").click();
      }

      var Calendar = FullCalendar.Calendar;
      // var Draggable = FullCalendar.Draggable;

      var containerEl = document.getElementById('external-events');
      var calendarEl = document.getElementById('calendar');
      var checkbox = document.getElementById('drop-remove');

      // initialize the external events
      // -----------------------------------------------------------------

      // initialize the calendar
      // -----------------------------------------------------------------

      var calendar = new Calendar(calendarEl, {
        themeSystem: 'bootstrap',
        headerToolbar: {
          left: 'prev,next',
          center: 'title',
          right: 'today',
          // right: 'dayGridMonth,timeGridWeek,timeGridDay'
          // right: 'dayGridMonth'
        },
        <%
        if(data){
        %>
        events: [
          <%
          for(var i=0; i<data.length; i++){
            var title = data[i].NAME + "-" + data[i].WORKTYPNM;
            var statusNm = "";
            var keyColor = "basic";
            var id = data[i].WORKYMD + "|" + data[i].WORKERCD + "|" + data[i].WORKTYP;
            var relatedTo = data[i].RELATEDTO;
            var switchedWith = data[i].SWITCHEDWITH;

            if(relatedTo && data[i].STATUS == "D"){
              continue;
            }

            if(switchedWith && (data[i].APPRSTATUS == "02" || data[i].APPRSTATUS == "03")){
              var worktypNm= workObj[relatedTo.split("|")[2]];
              var workerNm = workerObj[relatedTo.split("|")[1]];

              title = workerNm + "-" + worktypNm;
            }

            if(data[i].APPRSTATUS == "02" || data[i].APPRSTATUS == "03"){
                switch(data[i].STATUS){
                case "C":
                  statusNm = "(등록요청)";
                  keyColor = "change";
                  break;
                case "U":
                  statusNm = "(변경요청)";
                  keyColor = "change";
                  break;
                case "D":
                  statusNm = "(삭제요청)";
                  keyColor = "delete";
                  break;
                case "CF":
                case "CT":
                  statusNm = "(교체요청)";
                  keyColor = "switch";
                  break;
              }
            }
            else if(data[i].APPRSTATUS == "04"){
              statusNm += "(반려)"
            }

            if(workerCd != data[i].WORKERCD){
              if(data[i].APPRSTATUS == "05" || !data[i].SWITCHEDWITH || data[i].SWITCHEDWITH.indexOf(workerCd) == -1){
                keyColor = "noauth";
              }
            }

          %>
          {
            id: "<%=id%>",
            title: "<%=title + statusNm%>",
            start: "<%=data[i].WORKYMD%>",
            borderColor: backColors["<%=keyColor%>"],
            backgroundColor: backColors["<%=keyColor%>"],
            textColor: textColors["<%=keyColor%>"],
          },
          <%}%>
        ],
        <%}%>
        locale: 'kr',
        titleFormat: { year: 'numeric', month: 'numeric' },
        dayMaxEventRows: window.mobilecheck() ? 3 : 5,
        eventBackgroundColor: backColors.basic,
        eventBorderColor: backColors.basic,
        eventTextColor: textColors.basic,
        editable: false,
        eventStartEditable: true,
        eventResizableFromStart: false,
        droppable: true, // this allows things to be dropped onto the calendar
        selectable: true,
        longPressDelay: 250,
        eventLongPressDelay: 150,
        selectLongPressDelay: 250,
        height: "auto",
        select: function (info) {

          var f = document.batchModalForm;

          var endDte = new Date(info.endStr);
          endDte.setDate(endDte.getDate() - 1)
          
          var endDteStr = getYMDFormat(endDte, "-");;

          $("#myBatchModal").modal("show");
          console.log(info);

          f.batch_workymd_from.value = info.startStr;
          f.batch_workymd_to.value = endDteStr;

        },
        eventClickEx: function (jsEvent, ev, view, cellDate) {
          alert(cellDate);
        },
        dayClick: function (date, jsEvent, view) {
          alert('Clicked on: ' + date.getDate() + "/" + date.getMonth() + "/" + date.getFullYear());
        },
        dateClick: function (info) {
        },
        eventClick: function (info) {
          var eventObj = info.event;
          var f = document.mForm;

          if((backColors.change + backColors.delete).indexOf(eventObj.backgroundColor) != -1
                || ("<%=workerCd%>" != info.event.id.split("|")[1] && f.srcWork.value  == '')) return false;

          if (eventObj.url) {
            alert(
              'Clicked ' + eventObj.title + '.\n' +
              'Will open ' + eventObj.url + ' in a new tab'
            );

            window.open(eventObj.url);

            info.jsEvent.preventDefault(); // prevents browser from following link in current tab.
          } else {
            var msg = "변경 대상으로 지정하시겠습니까?";
            var target = "srcWork";

            if (f.srcWork.value == eventObj.id) {
              msg = "변경 요청을 초기화 하시겠습니까?";
              target = "init";
            } else if (f.srcWork.value != "") {
              var srcWorkTypeNm = f.srcWorkTitle.value;
              var srcWorkYmd = f.srcWork.value.split("|")[0];
              var destWorkTypeNm = eventObj.title;
              var destWorkYmd = eventObj.startStr.replace(/-/g, '');
              
              if(destWorkTypeNm.indexOf(srcWorkTypeNm) != -1){
                alert('동일한 근무자-근무조와는 변경 신청이 불가 합니다.');
                return;
              }

              if(calendar.getEventById(destWorkYmd + f.srcWork.value.substr(8, f.srcWork.value.length))){
                alert('목적지 일자에 동일한 근무자-근무조가 존재 합니다.');
                return;
              }

              console.log(srcWorkYmd + "|" + eventObj.id.split("|")[1] + "|" + eventObj.id.split("|")[2]);
              if(calendar.getEventById(srcWorkYmd + "|" + eventObj.id.split("|")[1] + "|" + eventObj.id.split("|")[2])){
                alert('소스 일자에 동일한 근무자-근무조가 존재 합니다.');
                return;
              }

              msg = "변경 요청 하시겠습니까?";
              // [" + f.srcWork.value + "] => [" + eventObj.title + "]";
              target = "destWork"
            }

            if (confirm(msg)) {
              if (target == "init") {
                eventObj.setProp("borderColor", backColors.basic);
                eventObj.setProp("backgroundColor", backColors.basic);
                eventObj.setProp("textColor", textColors.basic);
                if(f.destWork.value != ""){
                  calendar.getEventById(f.destWork.value).setProp("borderColor", backColors.basic);
                  calendar.getEventById(f.destWork.value).setProp("backgroundColor", backColors.basic);
                  calendar.getEventById(f.destWork.value).setProp("textColor", textColors.basic);
                }
                f.srcWork.value = "";
                f.srcWorkTitle.value = "";
                f.destWork.value = "";
                f.destWorkTitle.value = "";
              } else {

                if(f.destWork.value != ""){
                  calendar.getEventById(f.destWork.value).setProp("borderColor", backColors.basic);
                  calendar.getEventById(f.destWork.value).setProp("backgroundColor", backColors.basic);
                  calendar.getEventById(f.destWork.value).setProp("textColor", textColors.basic);
                }

                f[target].value = eventObj.id;
                f[target + "Title"].value = eventObj.title;
                eventObj.setProp("borderColor", backColors.switch);
                eventObj.setProp("backgroundColor", backColors.switch);
                eventObj.setProp("textColor", textColors.switch);

                if(target == "destWork"){
                  var resultObjArr = new Array();

                  var srcYmd = f.srcWork.value.split("|")[0];
                  var srcIdPart = f.srcWork.value.split("|").slice(-2).join("|");
                  var destYmd = f.destWork.value.split("|")[0];
                  var destIdPart = f.destWork.value.split("|").slice(-2).join("|");

                  var srcSwitchToId = srcYmd + "|" + destIdPart;
                  var destSwitchToId = destYmd + "|" + srcIdPart;

                  resultObjArr.push(f.srcWork.value + "|D|" + srcSwitchToId);
                  resultObjArr.push(srcSwitchToId + "|CF|" + f.srcWork.value + "|" + destSwitchToId);
                  resultObjArr.push(f.destWork.value + "|D|" + destSwitchToId);
                  resultObjArr.push(destSwitchToId + "|CT|"+ f.destWork.value + "|" + srcSwitchToId);

                  $.post('/workPlan/save', {data: JSON.stringify(resultObjArr), "site": new FormData(document.mForm).get("site")}, function(data){
                    f.srcWork.value = "";
                    f.srcWorkTitle.value = "";
                    f.destWork.value = "";
                    f.destWorkTitle.value = "";

                    location.href = "/workPlan?site=" + data.site;
                  });
                }
              }

            }
          }
        },
        eventAllow: function (dropInfo, draggedEvent) {
          // var f = document.mForm;
          console.log(draggedEvent.backgroundColor);
          console.log(!(JSON.stringify(backColors).indexOf(draggedEvent.backgroundColor)));
          // return !(draggedEvent.id == f.srcWork.value || draggedEvent.id == f.destWork.value); // a boolean
          return (backColors.basic.indexOf(draggedEvent.backgroundColor) != -1);
        },
        dropAccept: function (draggableItem) {
          return true;
        },
        eventDidMount: function(info) {
          $(info.el).tooltip({title:info.event.title, container: "body"});
          console.log(info.event.title);
          // var tooltip = new Tooltip(info.el, {
            // title: info.event.extendedProps.description,
          //   title: info.event.title,
          //   placement: 'top',
          //   trigger: 'hover',
          //   container: 'body'
          // });
        },
        // eventLongPressDelay: 100,
        eventDrop: function(info){
          // console.log(info.oldResource);
          // console.log(info.newResource);
          if(!confirm("결재 요청 하시겠습니까?")){
            info.revert();
            return false;
          }

          var startStr = info.event.startStr.replace(/-/g, "");
          // var partId = info.event.id.substr(9, info.event.id.length);
          
          var serachIdArr  = info.event.id.split("|");
          var searchIdPart = serachIdArr[0] + "|" + serachIdArr[1];

          var newId = startStr + "|" + serachIdArr[1] + "|" + serachIdArr[2];

          var eventsArr = calendar.getEvents();

          if(calendar.getEventById(newId) != null){
            info.revert();
            return false;
          }

          var tempTitle = info.event.title;
          var resultTitle = tempTitle.indexOf("(") != -1 ? tempTitle.substring(0, tempTitle.indexOf("(")) : tempTitle;
          var resultObjArr = new Array();
          
          calendar.addEvent({
            id: newId,
            title: resultTitle + "(변경요청)",
            start: info.event.startStr,
            backgroundColor: backColors.change,
            borderColor: backColors.change,
            textColor: textColors.change
          });
          
          resultObjArr.push(info.event.id + "|D|" + newId);
          resultObjArr.push(newId + "|U|" + info.event.id);

          $.post('/workPlan/save', {data: JSON.stringify(resultObjArr), "site": new FormData(document.mForm).get("site")}, function(data){
            if(data.msg){
              alert(data.msg);
            }else{
              info.event.remove();
            }

            location.href = '/workPlan?site=' + data.site;
            // alert('처리 됐습니다.');
          });

        },
        eventReceive: function(info){
          var strDate = info.event._instance.range.start;
          var strDateStr = getYMDFormat(strDate, "");
          var workerCd = info.draggedEl.getAttribute('data-workercd');
          var f = document.modalForm;

          var checkVal = strDateStr + "|" + workerCd;

          var eventsArr = calendar.getEvents();

          for(var i=0; i<eventsArr.length; i++){
            if(eventsArr[i].id.indexOf(checkVal) != -1){
              alert('기등록돼 있어 등록이 불가 합니다.');
              // info.revert();

              $("#myModal").modal('hide');
              return false;
            }
          }
        },
        drop: function (info) {
          var f = document.modalForm;
                    
          f.workymd.value = info.dateStr;
          f.worker.value = info.draggedEl.getAttribute('data-workercd');

          var infoTitle = $(info.resource).text().trim();
          var workerNm = $("#worker option:selected").text().trim();

          $("#myModal").modal('show', {
            backdrop: false
          });
        }
      });

      calendar.render();

      $("#modalForm").submit(function () {
        if(!confirm("결재 요청 하시겠습니까?")) return false;

        var f = document.modalForm;
        var id = f.workymd.value.replace(/-/g, "") + "|" + f.worker.value + "|" + f.worktype.value;
        var resultObjArr = new Array();

        calendar.addEvent({
          id: id,
          title: $("#worker option:selected").text().trim() + "-" + $("#worktype option:selected").text().trim() + "(등록요청)",
          start: f.workymd.value,
          textColor: "#000",
          borderColor: backColors.change,
          backgroundColor: backColors.change
        });
        
        resultObjArr.push(id + "|C");

        $.post('/workPlan/save', {data: JSON.stringify(resultObjArr), "site": new FormData(document.mForm).get("site")}, function(data){
          $("#myModal").modal('hide');
          location.href = '/workPlan?site=' + data.site;
          // alert('처리 됐습니다.');
          
        });

        return false;
      });

      $("#batchModalForm").submit(function (e) {
      // $("#batchConfirm").click(function (e) {

        if(!confirm("결재 요청 하시겠습니까?")) return false;

        var f = document.batchModalForm;
        var resultObjArr = new Array();

        var Difference_In_Days = getDiffDays(f.batch_workymd_from.value, f.batch_workymd_to.value);

        // 지정된 기간만큼 순회
        for (var i = 0; i <= Difference_In_Days; i++) {
          var temp = new Date(f.batch_workymd_from.value); // 시작일자를 가져옴
          temp.setDate(temp.getDate() + i); // 시작일자~종료일자 사이의 날짜를 하나씩 가져옴
          
          var tempYmd = getYMDFormat(temp, ""); // YYYYMMDD 형식의 문자열 값으로 변환
          // alert(tempYmd.replace(/-/g, ""));
          var id = tempYmd + "|" + f.batch_worker.value + "|" + f.batch_worktype.value; // id 값 구성, 규칙: 일자|근무자코드|근무조코드
          var existWork = false; // 해당 일자에 근무자가 존재하는 지 여부 체크 => 존재 시, (등록요청)이 아닌, (변경요청)으로 표시
          var existWorkType =false;
          var existWorkApproving = false; // 해당 일자에 등록돼 있는 근무자가 결재 중 상태인 지 체크 => 결재 중인 경우, 처리 제외
          var existWorkArr = new Array(); // 해당 일자에 존재하는 근무자의 이벤트 오브젝트를 저장하는 배열 객체

          if(document.activeElement.id == "batchConfirm"){ // 확인 버튼 클릭 시

            // 해당 일자에 근무자가 존재하는 지 체크 - 근무자(고정) + 근무자코드(순회)하며 일치하는 근무정보가 있는 지 확인
            $("#batch_worktype option").each(function(index, obj){
              var tempId = tempYmd + "|" + f.batch_worker.value + "|" + obj.value;

              var tempEventObj = calendar.getEventById(tempId);
              if(tempEventObj != null){ // (근무일자 + 근무자 + 근무자코드) 일치 시
                existWork = true;

                if(obj.value == f.batch_worktype.value){
                  existWorkType = true;
                }
                
                existWorkArr.push(tempEventObj); // 기 등록된 이벤트 오브젝트 저장
              }
            });

            var chgGbnNm = "등록요청";
            var chgGbn = "C";
            var delEventObj;

            if(existWork){
              chgGbnNm = "변경요청";
              chgGbn = "U";

              delEventObj = existWorkArr.pop();

              if(existWorkType){
                continue;
              }

              if(backColors.basic.indexOf(delEventObj.backgroundColor) == -1){ // 삭제, 변경 요청 상태인 경우 변경 제외
                existWorkApproving = true;
                continue;
              }

              resultObjArr.push(delEventObj.id + "|D|" + id);
              delEventObj.remove(); // 기 등록된 이벤트 오브젝트 삭제 - 근무정보가 달라지므로 삭제
            }

            // 새로운 근무 정보 (변경될 정보) 이벤트 생성
            var eventObj = calendar.addEvent({
              allDay: true,
              id: id,
              title: $("#batch_worker option:selected").text().trim() + "-" + $("#batch_worktype option:selected").text().trim() + "(" + chgGbnNm + ")",
              start: tempYmd,
              borderColor: backColors.change,
              backgroundColor: backColors.change,
              textColor: textColors.change,
            });

            resultObjArr.push(eventObj.id + "|" + chgGbn + "|" + (delEventObj != null ? delEventObj.id : ""));
            delEventObj = null;

          }else{ // 삭제 버튼 클릭 시

            var eventObj = calendar.getEventById(id);

            if(eventObj == null) continue;

            if(backColors.basic.indexOf(delEventObj.backgroundColor) == -1){ // 삭제, 변경 요청 상태인 경우 변경 제외
              existWorkApproving = true;
              continue;
            }

            var tempTitle = eventObj.title;
            var resultTitle = tempTitle.indexOf("(") != -1 ? tempTitle.substring(0, tempTitle.indexOf("(")) : tempTitle;
            calendar.getEventById(id).setProp("title", resultTitle + "(삭제요청)");
            calendar.getEventById(id).setProp("borderColor", backColors.delete);
            calendar.getEventById(id).setProp("backgroundColor", backColors.delete);
            calendar.getEventById(id).setProp("textColor", textColors.delete);

            resultObjArr.push(eventObj.id + "|D");
          }
          
        }

        console.log(resultObjArr);

        if(existWorkApproving){
          alert("결재 진행 중인 업무에 대한 변경 요청은 제외 됐습니다.");
        }

        if(resultObjArr.length == 0){
          return false;
        }

        $.post('/workPlan/save', {data: JSON.stringify(resultObjArr), "site": new FormData(document.mForm).get("site")}, function(data){
          $("#myBatchModal").modal('hide');
          location.href = '/workPlan?site=' + data.site;
          // alert('처리 됐습니다.');
        });

        return false;
      });


      $("#batchDelete2").click(function(){

        if(!confirm("결재 요청 하시겠습니까?")) return false;

        var f = document.batchModalForm;

        var Difference_In_Days = getDiffDays(f.batch_workymd_from.value, f.batch_workymd_to.value);

        for(var i=0; i<=Difference_In_Days; i++){
          var temp = new Date(f.batch_workymd_from.value);
          temp.setDate(temp.getDate() + i);

          var tempStr = getYMDFormat(temp, "");
          var id = tempStr + "|" + f.batch_worker.value + "|" + f.batch_worktype.value;

          if(calendar.getEventById(id) == null) continue;

          console.log(id);

          if(!(document.mForm.srcWork.value == id || document.mForm.destWork.value == id)){
            var tempTitle = calendar.getEventById(id).title;
            calendar.getEventById(id).setProp("title", tempTitle.substring(0, tempTitle.indexOf("(")) + "(삭제요청)");
            calendar.getEventById(id).setProp("borderColor", backColors.delete);
            calendar.getEventById(id).setProp("backgroundColor", backColors.delete);
            calendar.getEventById(id).setProp("textColor", textColors.delete);
            // calendar.getEventById(id).remove();
          }
        }

        $("#myBatchModal").modal("hide");
        });

      $("#myModal").on("hide.bs.modal", function (e) {
        if(calendar.getEventById("external") != null)
          calendar.getEventById("external").remove();
      });

      $("#site").change(function () {
        location.href = "/workPlan?site=" + this.value;
      });

    });

  function getYMDFormat(date, delim){
    var tempYear = date.getFullYear();
    var tempMonth = date.getMonth() + 1;
    tempMonth = tempMonth < 10 ? "0" + tempMonth : tempMonth;
    var tempDate = date.getDate(); 
    tempDate = tempDate < 10 ? "0" + tempDate : tempDate;
    var tempYmd = tempYear + delim + tempMonth + delim + tempDate;

    return tempYmd;
  }

  function getDiffDays(date1_str, date2_str){
      var date1 = new Date(date1_str);
      var date2 = new Date(date2_str);

      // To calculate the time difference of two dates 
      var Difference_In_Time = date2.getTime() - date1.getTime();

      // To calculate the no. of days between two dates 
      var Difference_In_Days = Difference_In_Time / (1000 * 3600 * 24);

      return Difference_In_Days;
  }

  function approvalBatch(){

    var f = document.mForm;
    var resultObjArr = new Array();

    // var obj = <%-JSON.stringify(data[0])%>;
    // console.log(obj);
    
    <%for(var i=0; i<data.length; i++){%>
      var obj = <%-JSON.stringify(data[i])%>;
      obj.status = "05";
      resultObjArr.push(obj);
    <%}%>

    console.log(resultObjArr);

    $.post('/workPlan/approvalBatch', {data: JSON.stringify(resultObjArr), site: f.site.value}, function(data){
        location.href = '/workPlan?site=' + data.site;
      });
  }

  function approval(obj, status){
    
    var f = document.mForm;

    var statusNm = "승인";
    if(status == '04'){
      statusNm = "반려";
    }

    if(!confirm(statusNm + ' 하시겠습니까?')) return false;

    obj.status = status;

    $.post('/workPlan/approval', obj, function(data){
      location.href = '/workPlan?site=' + data.site;
    });
  }

  function reject(obj){
    if(!confirm('반려 하시겠습니까?')) return false;

    $.post('/workPlan/reject', obj, function(data){

    });
  }

  window.mobilecheck = function() {
    var check = false;
    (function(a){if(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor||window.opera);
    return check;
  };


  </script>

</body>

</html>